// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <InjectIntl(SlidePanel)>
    <SlidePanel
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      panelBehavior="overlay"
      panelPosition="end"
      panelSize="small"
      replaceMainAriaDescribedBy={false}
    >
      <div
        className="slide-panel orion-fusion-theme"
        data-slide-panel-panel-behavior="overlay"
        data-slide-panel-panel-position="end"
        data-slide-panel-panel-size="small"
      >
        <div
          aria-describedby="detail-panel-warning"
          className="main"
          key="main"
          onClick={[Function]}
          onKeyUp={[Function]}
          role="main"
          tabIndex="-1"
        >
          <VisuallyHiddenText
            id="detail-panel-warning"
            tabIndex="-1"
            text="Terra.slidePanel.discloseWarning"
          >
            <span
              className="visually-hidden-text"
              id="detail-panel-warning"
              tabIndex="-1"
            >
              Terra.slidePanel.discloseWarning
            </span>
          </VisuallyHiddenText>
        </div>
        <div
          aria-hidden="true"
          className="panel"
          key="panel"
          role="region"
          tabIndex="-1"
        >
          <VisuallyHiddenText>
            <span
              className="visually-hidden-text"
            />
          </VisuallyHiddenText>
        </div>
      </div>
    </SlidePanel>
  </InjectIntl(SlidePanel)>
</ThemeContextProvider>
`;

exports[`should override user provided attributes that aren't className 1`] = `
<div
  class="slide-panel pad-this-slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
  data-test-attr="ahoy thar"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel when mainAriaDescribedBy has a single ID and replaceMainAriaDescribedBy is false 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning patient-list"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel when mainAriaDescribedBy has a single ID and replaceMainAriaDescribedBy is true 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="patient-list"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel when mainAriaDescribedBy has multiple IDs and replaceMainAriaDescribedBy is false 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning patient-list-1 patient-list-2"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel when mainAriaDescribedBy has multiple IDs and replaceMainAriaDescribedBy is true 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="patient-list-1 patient-list-2"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with a fullscreen state 1`] = `
<div
  class="slide-panel is-fullscreen"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with an open state 1`] = `
<div
  class="slide-panel is-open"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="false"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with fill 1`] = `
<div
  class="slide-panel fill"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with main content 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
    <p>
      Main Content
    </p>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with panel content 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
    <p>
      Panel Content
    </p>
  </div>
</div>
`;

exports[`should render a SlidePanel with panelAriaLabel and mainAriaLabel specified 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    aria-label="Main content area"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    aria-label="Panel content area"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    >
      Panel content area
    </span>
  </div>
</div>
`;

exports[`should render a SlidePanel with panelBehavior = overlay 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with panelBehavior = squish 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="squish"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with panelPosition = end 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with panelPosition = start 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="start"
  data-slide-panel-panel-size="small"
>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
</div>
`;

exports[`should render a SlidePanel with panelSize = large 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="large"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with panelSize = small 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a SlidePanel with the given extra attributes 1`] = `
<div
  class="slide-panel pad-this-slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
  data-test-attr="ahoy thar"
  id="my-slide-panel"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;

exports[`should render a default SlidePanel with no props 1`] = `
<div
  class="slide-panel"
  data-slide-panel-panel-behavior="overlay"
  data-slide-panel-panel-position="end"
  data-slide-panel-panel-size="small"
>
  <div
    aria-describedby="detail-panel-warning"
    class="main"
    role="main"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
      id="detail-panel-warning"
      tabindex="-1"
    >
      Terra.slidePanel.discloseWarning
    </span>
  </div>
  <div
    aria-hidden="true"
    class="panel"
    role="region"
    tabindex="-1"
  >
    <span
      class="visually-hidden-text"
    />
  </div>
</div>
`;
